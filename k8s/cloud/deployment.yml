apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-ms
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customer-ms
  template:
    metadata:
      labels:
        app: customer-ms
    spec:
      containers:
      - name: customer-ms
        image: 975050002971.dkr.ecr.us-east-1.amazonaws.com/customer-ms:latest
        ports:
        - containerPort: 3004
        livenessProbe:
          httpGet:
            path: /
            port: 3004
          initialDelaySeconds: 15
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: 3004
          initialDelaySeconds: 15
        resources:
          requests:
            cpu: 10m
        imagePullPolicy: Always
        # env:
        #   - name: MYSQL_HOST
        #     valueFrom:
        #       configMapKeyRef:
        #         name: customer-ms-config
        #         key: MYSQL_HOST
        #   - name: MYSQL_PORT
        #     valueFrom:
        #       configMapKeyRef:
        #         name: customer-ms-config
        #         key: MYSQL_PORT
        #   - name: MYSQL_DB
        #     valueFrom:
        #       configMapKeyRef:
        #         name: customer-ms-config
        #         key: MYSQL_DB
        #   - name: MYSQL_USER
        #     valueFrom:
        #       configMapKeyRef:
        #         name: customer-ms-config
        #         key: MYSQL_USER
        #   - name: MYSQL_PASSWORD
        #     valueFrom:
        #       configMapKeyRef:
        #         name: customer-ms-config
        #         key: MYSQL_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: svc-customer-ms
spec:
  type: LoadBalancer
  selector:
    app: customer-ms
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3004
